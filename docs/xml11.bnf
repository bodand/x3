// This document was generated from the XML 1.1 specification by extracting the useful information from it.
// x3 is lazy, and at the moment will also parse XML 1.0 with this grammar, however, this may change in the future.
// Current source: https://www.w3.org/TR/2006/REC-xml11-20060816/

document ::= ( prolog element Misc* ) ! ( Char* RestrictedChar Char* )

Char ::= [#x1-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]
RestrictedChar       ::=       [#x1-#x8] | [#xB-#xC] | [#xE-#x1F] | [#x7F-#x84] | [#x86-#x9F]

/*
NOTE: Warn on
    [#x0-#x8], [#xB-#xC], [#xE-#x1F], [#x7F-#x84], [#x86-#x9F], [#xFDD0-#xFDDF],
    [#x0FFFE-#x1FFFF], [#x2FFFE-#x2FFFF], [#x3FFFE-#x3FFFF],
    [#x3FFFE-#x4FFFF], [#x5FFFE-#x5FFFF], [#x6FFFE-#x6FFFF],
    [#x6FFFE-#x7FFFF], [#x8FFFE-#x8FFFF], [#x9FFFE-#x9FFFF],
    [#xAFFFE-#xAFFFF], [#xBFFFE-#xBFFFF], [#xCFFFE-#xCFFFF],
    [#xDFFFE-#xDFFFF], [#xEFFFE-#xEFFFF], [#xFFFFE-#xFFFFF],
    [#x9FFFE-#x10FFFF].
*/

S ::= (#x20 | #x9 | #xD | #xA)+

/*
#xD needs to be "replaced with" #xA before any other processing.
Prolly have the parser act the same way about both
*/

NameStartChar ::= ":" | [A-Z] | "_" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]
NameChar      ::= NameStartChar | "-" | "." | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]
Name          ::= NameStartChar (NameChar)*
Names         ::= Name (#x20 Name)*
Nmtoken       ::= (NameChar)+
Nmtokens      ::= Nmtoken (#x20 Nmtoken)*


EntityValue   ::=       '"' ([^%&"] | PEReference | Reference)* '"'
      |  "'" ([^%&'] | PEReference | Reference)* "'"
AttValue      ::=       '"' ([^<&"] | Reference)* '"'
            |  "'" ([^<&'] | Reference)* "'"
SystemLiteral ::=       ('"' [^"]* '"') | ("'" [^']* "'")
PubidLiteral  ::=       '"' PubidChar* '"' | "'" (PubidChar - "'")* "'"
PubidChar     ::=       #x20 | #xD | #xA | [a-zA-Z0-9] | [-'()+,./:=?;!*#@$_%]


CharData ::= [^<&]* - ([^<&]* ']]>' [^<&]*)


Comment ::= '<!--' ((Char - '-') | ('-' (Char - '-')))* '-->'

/* As an extension with a warning emitted, -- can appear in comments, even if the standard explicitly says it cannot,
for SGML compatiblity. (But who uses SGML anyways, XML is general enough, imo SGML is just hell to parse
without real benefit) */